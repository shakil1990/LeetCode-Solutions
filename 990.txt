class Solution {
public:
    int parent[205];
    
    int findparent(int n){
        if(parent[n]==n){
            return n;
        }else return parent[n] = findparent(parent[n]);
    }
    
    void makeparent(int a,int b){
        a = findparent(a);
        b = findparent(b);
        
        if(a != b){
            parent[a] = b;
        }
        return;
    }
    
    
    bool equationsPossible(vector<string>& eq) {
        
        for(int i=1; i<=26; i++){
            parent[i] = i;
        }
        int u,v;
        for(auto s : eq){
            u = s[0] -'a' + 1;
            v = s[3] -'a' + 1;
            if(s[1] == '='){
               
                if(findparent(u) != findparent(v)){
                     makeparent(u,v);
                }
            }
        }
        
        for(int i=1; i<=26; i++){
            parent[i] = findparent(parent[i]);
        }
        
        for(auto s:eq){
            u = s[0] -'a' + 1;
            v = s[3] -'a' + 1;
            if(s[1]=='!'){
               
                if(findparent(u) == findparent(v)){
                     return false;
                }
            }
        }
        return true;
    }
};