/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* dfs(TreeNode*root ,int val,int cdepth,int depth){
        if(root == NULL)return NULL;
        
        if(cdepth == depth-1){
            TreeNode* l = new TreeNode(val,root->left,NULL);
            TreeNode* r = new TreeNode(val,NULL,root->right);
            root->left = l;
            root->right = r;
        }else{
            dfs(root->left,val,cdepth + 1,depth);
            dfs(root->right,val,cdepth + 1, depth);
        }
        return root;
    }
    
    
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth == 1){
            TreeNode *nroot = new TreeNode(val,root,NULL);
            return nroot;
        }
        return dfs(root,val,1,depth);
    }
};