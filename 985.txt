class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& q) {
        
        vector<int>ans;
        int i,n = nums.size(), j, l, r;
        int even = 0, odd = 0;
        
        for(i=0; i<n; i++){
            if(nums[i]%2){
                odd += nums[i];
            }else even += nums[i];
        }
        
        for(i=0; i<q.size(); i++){
            r = nums[q[i][1]];
            
            if(r%2!=0){
                if((q[i][0] + r)%2!=0){
                    nums[q[i][1]] += q[i][0];
                    odd += q[i][0];
                }else{
                    odd -= r;
                    nums[q[i][1]] += q[i][0];
                    even += nums[q[i][1]];
                }
            }else{
                if((q[i][0] + r)%2==0){
                    nums[q[i][1]] += q[i][0];
                    even += q[i][0];
                }else{
                    even -= r;
                    nums[q[i][1]] += q[i][0];
                    odd += nums[q[i][1]];
                }
            }
            
            ans.push_back(even);
            
        }
        return ans;
    }
};