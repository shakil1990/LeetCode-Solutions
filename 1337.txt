class Solution {
public:
    static bool cmp(const pair<int,int>&p1,const pair<int,int>&p2){
        if(p1.first==p2.first)
            return p1.second < p2.second;
        else return p1.first < p2.first;
    }
    
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        int n = mat.size();
        int m =mat[0].size();
        int i,j,a[n+1],b[n+1];
        
        vector<pair<int,int>>v;
        
        for(i=0; i<n; i++){
            int s = 0;
            for(j=0; j<m; j++){
                s+=mat[i][j];
            }
            v.push_back(make_pair(s,i));
        }
        sort(v.begin(),v.end(),cmp);
        
        vector<int>ans;
        
        for(i=0; i<k; i++){
            ans.push_back(v[i].second);
        }
        return ans;
    }
};