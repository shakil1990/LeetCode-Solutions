/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int N = 2001;
    int mxlevel = 0;
    
    void inorder(TreeNode* root,int level,vector<vector<int>>&v){
        if(root == NULL)
            return;
        
        v[level].push_back(root->val);
        
        mxlevel = max(mxlevel,level);
       
        inorder(root->left,level+1,v);
       
        inorder(root->right,level+1,v);
    }
    
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        if(root==NULL){
            vector<vector<int>>lol;
            return lol;
        }
        
        vector<vector<int> > v(2001);
        
        vector<vector<int> > ans;
        
        inorder(root,0,v);
        
        
        for(int i=0; i<=mxlevel; i++){
            
            vector<int> res;
            
            for(int j=0; j<v[i].size(); j++){
                  res.push_back(v[i][j]);
            }
            ans.push_back(res);
        }
    
        return ans;
        
    }
};